; checkforwin.asm
;
; Intoductory Paragraph:
;
;

    .ORIG x3A00
; CHECKFORWIN
;   Inputs:
;     R0: Current player's token
;     R1: Column of last move
;     R2: Memory location modified in last move
;   Outputs:
;     R0: 1 if the player wins
;         0 if no win
CHECKFORWIN
    ; Your code goes here:
	; R1 used as a counter to row
	; R3 used as a pointer to the BD
	; R4 used as content of that address
	; R5 used to hold the calculation result
	; R6 used to count how many total
	ST R7,CFW_SAVE_R7
	ST R5,CFW_SAVE_R5
	ADD R0,R0,#0
	BRn PRINT2
	BR PRINT1

BACK
	ST R1,CFW_SAVE_R1
	ST R4,CFW_SAVE_R4
	ST R3,CFW_SAVE_R3
	ST R6,CFW_SAVE_R6
	

	ADD R3,R2,#0
	ADD R3,R3,#7
	LDR R4,R3,#0
	NOT R5,R4
	ADD R5,R5,#1
	ADD R5,R5,R0
	BRz GO_THIRD

KEEP_CHECKING_H
	LD R1,CFW_SAVE_R1
	AND R6,R6,#0
	ADD R3,R2,#0
	AND R5,R5,#0
	ADD R5,R5,#7
	NOT R1,R1
	ADD R1,R1,#1
	ADD R1,R1,R7

KEEP_LOOP
	ADD R1,R1,#0
	BRz FINISH_H
	ADD R1,R1,#-1
	LDR R4,R3,#0
	ADD R3,R3,#1
	NOT R5,R4
	ADD R5,R5,#1
	ADD R5,R5,R0
	BRnp FINISH_H
	ADD R6,R6,#1
	BR KEEP_LOOP

FINISH_H
	ADD R6,R6,#-4
	BRzp WIN_

	LD R1,CFW_SAVE_R1
	AND R6,R6,#0
	ADD R3,R2,#0

KEEP_LOOP2
	ADD R1,R1,#0
	BRz FINISH_H2
	ADD R1,R1,#-1
	LDR R4,R3,#0
	ADD R3,R3,#-1
	NOT R5,R4
	ADD R5,R5,#1
	ADD R5,R5,R0
	BRnp FINISH_H2
	ADD R6,R6,#1
	BR KEEP_LOOP2

FINISH_H2
	ADD R6,R6,#-4
	BRzp WIN_

	
	AND R6,R6,#0
	LD R1,CFW_SAVE_R1
	ADD R3,R2,#0
	;ADD R1,R1,#-1
KEEP_LOOP_LB
	ADD R1,R1,#0
	BRz FINISH_LB_CORNOR
	ADD R1,R1,#-1
	ADD R3,R3,#-1
	ADD R3,R3,#7
	LDR R4,R3,#0
	NOT R5,R4
	ADD R5,R5,#1
	ADD R5,R5,R0
	BRnp FINISH_LB_CORNOR
	ADD R6,R6,#1
	BR KEEP_LOOP_LB

FINISH_LB_CORNOR
	ST R6,CFW_SAVE_TRESULT
	AND R6,R6,#0
	LD R1,CFW_SAVE_R1
	ADD R3,R2,#0
	AND R5,R5,#0
	ADD R5,R5,#7
	NOT R1,R1
	ADD R1,R1,#1
	ADD R1,R1,R5
	;ADD R1,R1,#-1
KEEP_LOOP_UR
	ADD R1,R1,#0
	BRz FINISH_UR_CORNOR
	ADD R1,R1,#-1
	ADD R3,R3,#1
	ADD R3,R3,#-7
	LDR R4,R3,#0
	NOT R5,R4
	ADD R5,R5,#1
	ADD R5,R5,R0
	BRnp FINISH_UR_CORNOR
	ADD R6,R6,#1
	BR KEEP_LOOP_UR

FINISH_UR_CORNOR
	LD R5,CFW_SAVE_TRESULT
	ADD R6,R6,R5
	ADD R6,R6,#-3
	BRzp WIN_

	AND R6,R6,#0
	LD R1,CFW_SAVE_R1
	ADD R3,R2,#0
	;ADD R1,R1,#-1

KEEP_LOOP_UL
	ADD R1,R1,#0
	BRz FINISH_UL_CORNOR
	ADD R1,R1,#-1
	ADD R3,R3,#-1
	ADD R3,R3,#-7
	LDR R4,R3,#0
	NOT R5,R4
	ADD R5,R5,#1
	ADD R5,R5,R0
	BRnp FINISH_UL_CORNOR
	ADD R6,R6,#1
	BR KEEP_LOOP_UL

FINISH_UL_CORNOR
	ST R6,CFW_SAVE_TRESULT
	AND R6,R6,#0
	LD R1,CFW_SAVE_R1
	ADD R3,R2,#0
	AND R5,R5,#0
	ADD R5,R5,#7
	NOT R1,R1
	ADD R1,R1,#1
	ADD R1,R1,R5
	;ADD R1,R1,#-1
KEEP_LOOP_LR
	ADD R1,R1,#0
	BRz FINISH_LR_CORNOR
	ADD R1,R1,#-1
	ADD R3,R3,#1
	ADD R3,R3,#7
	LDR R4,R3,#0
	NOT R5,R4
	ADD R5,R5,#1
	ADD R5,R5,R0
	BRnp FINISH_LR_CORNOR
	ADD R6,R6,#1
	BR KEEP_LOOP_LR

FINISH_LR_CORNOR
	LD R5,CFW_SAVE_TRESULT
	ADD R6,R6,R5
	ADD R6,R6,#-3
	BRzp WIN_
	BR NOWIN_









GO_THIRD
	ADD R3,R3,#7
	LDR R4,R3,#0
	NOT R5,R4
	ADD R5,R5,#1
	ADD R5,R5,R0
	BRz GO_FORTH
	BR KEEP_CHECKING_H


GO_FORTH
	ADD R3,R3,#7
	LDR R4,R3,#0
	NOT R5,R4
	ADD R5,R5,#1
	ADD R5,R5,R0
	BRz WIN_
	BR KEEP_CHECKING_H





    
WIN_
	AND R0,R0,#0
	ADD R0,R0,#1
	LD R3,CFW_SAVE_R3
	LD R4,CFW_SAVE_R4
	LD R5,CFW_SAVE_R5
	LD R6,CFW_SAVE_R6
	LD R1,CFW_SAVE_R1
	LD R7,CFW_SAVE_R7
	RET


NOWIN_
	AND R0,R0,#0
	LD R3,CFW_SAVE_R3
	LD R4,CFW_SAVE_R4
	LD R5,CFW_SAVE_R5
	LD R6,CFW_SAVE_R6
	LD R1,CFW_SAVE_R1
	LD R7,CFW_SAVE_R7
	RET	


PRINT2
	ST R0,CFW_SAVE_R0
	LEA R0,STRING2
	PUTS
	LD R5,ASCII_ZERO_B
	ADD R0,R1,R5
	ADD R0,R0,#1
	OUT
	LEA R0,STRING3
	PUTS
	LD R0,CFW_SAVE_R0
	BR BACK

PRINT1
	ST R0,CFW_SAVE_R0
	LEA R0,STRING1
	PUTS
	LD R5,ASCII_ZERO_B
	ADD R0,R1,R5
	ADD R0,R0,#1
	OUT
	LEA R0,STRING3
	PUTS
	LD R0,CFW_SAVE_R0
	BR BACK

	;AND R0, R0, 0   ; Remove this AND instruction once you begin 
                    ; working on this subroutine!
CFW_SAVE_R0 .FILL x0000
CFW_SAVE_R1	.FILL x0000
CFW_SAVE_R3	.FILL x0000
CFW_SAVE_R4	.FILL x0000
CFW_SAVE_R5	.FILL x0000
CFW_SAVE_R6 .FILL x0000
CFW_SAVE_R7	.FILL x0000
CFW_SAVE_TRESULT .FILL x0000
ASCII_ZERO_B  .FILL x30
STRING2 .STRINGZ   "PLAYER2, MAKE A MOVE "
STRING1 .STRINGZ   "PLAYER1, MAKE A MOVE "
STRING3 .STRINGZ   "\n"
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Do not modify below this line ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Indirect references to far away locations
CW_BOARD
    .FILL x6000

; End of assembly file
    .END
