$date
	Sun Feb 18 15:30:12 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module arith_machine_test $end
$var wire 1 ! except $end
$var reg 1 " clock $end
$var reg 1 # done $end
$var reg 1 $ reset $end
$var integer 32 % i [31:0] $end
$scope module am $end
$var wire 1 " clock $end
$var wire 1 $ reset $end
$var wire 32 & rtData [31:0] $end
$var wire 32 ' rsData [31:0] $end
$var wire 1 ( rd_src $end
$var wire 1 ) rdWriteEnable $end
$var wire 5 * rdNum [4:0] $end
$var wire 32 + rdData [31:0] $end
$var wire 32 , out [31:0] $end
$var wire 32 - nextPC [31:0] $end
$var wire 32 . inst [31:0] $end
$var wire 1 ! except $end
$var wire 1 / alu_src2 $end
$var wire 3 0 alu_op [2:0] $end
$var wire 32 1 PC [31:0] $end
$var wire 32 2 B [31:0] $end
$scope module PC_reg $end
$var wire 1 " clock $end
$var wire 1 3 enable $end
$var wire 1 $ reset $end
$var wire 32 4 d [31:0] $end
$var reg 32 5 q [31:0] $end
$upscope $end
$scope module decoder1 $end
$var wire 1 ! except $end
$var wire 6 6 funct [5:0] $end
$var wire 1 7 inst_add $end
$var wire 1 8 inst_and $end
$var wire 1 9 inst_nor $end
$var wire 1 : inst_or $end
$var wire 1 ; inst_sub $end
$var wire 1 < inst_xor $end
$var wire 6 = opcode [5:0] $end
$var wire 1 ) writeenable $end
$var wire 1 ( rd_src $end
$var wire 1 > inst_xori $end
$var wire 1 ? inst_ori $end
$var wire 1 @ inst_andi $end
$var wire 1 A inst_addi $end
$var wire 1 / alu_src2 $end
$var wire 3 B alu_op [2:0] $end
$upscope $end
$scope module im $end
$var wire 30 C addr [29:0] $end
$var wire 32 D data [31:0] $end
$var reg 32 E i [31:0] $end
$upscope $end
$scope module m1 $end
$var wire 5 F A [4:0] $end
$var wire 5 G B [4:0] $end
$var wire 5 H out [4:0] $end
$var wire 1 ( sel $end
$var wire 5 I temp1 [4:0] $end
$var wire 5 J temp2 [4:0] $end
$upscope $end
$scope module m2 $end
$var wire 32 K B [31:0] $end
$var wire 32 L out [31:0] $end
$var wire 1 / sel $end
$var wire 32 M temp1 [31:0] $end
$var wire 32 N temp2 [31:0] $end
$var wire 32 O A [31:0] $end
$upscope $end
$scope module mainalu $end
$var wire 3 P control [2:0] $end
$var wire 32 Q inB [31:0] $end
$var wire 1 R negative $end
$var wire 32 S out [31:0] $end
$var wire 1 T overflow $end
$var wire 1 U zero $end
$var wire 32 V inA [31:0] $end
$upscope $end
$scope module pcplus4 $end
$var wire 3 W control [2:0] $end
$var wire 32 X inA [31:0] $end
$var wire 32 Y inB [31:0] $end
$var wire 1 Z negative $end
$var wire 32 [ out [31:0] $end
$var wire 1 \ overflow $end
$var wire 1 ] zero $end
$upscope $end
$scope module rf $end
$var wire 1 " clock $end
$var wire 32 ^ rdData [31:0] $end
$var wire 5 _ rdNum [4:0] $end
$var wire 1 ) rdWriteEnable $end
$var wire 1 $ reset $end
$var wire 32 ` rsData [31:0] $end
$var wire 5 a rsNum [4:0] $end
$var wire 32 b rtData [31:0] $end
$var wire 5 c rtNum [4:0] $end
$var integer 32 d i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 e \r[0] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 f \r[1] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 g \r[2] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 h \r[3] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 i \r[4] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 j \r[5] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 k \r[6] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 l \r[7] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 m \r[8] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 n \r[9] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 o \r[10] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 p \r[11] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 q \r[12] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 r \r[13] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 s \r[14] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 t \r[15] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 u \r[16] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 v \r[17] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 w \r[18] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 x \r[19] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 y \r[20] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 z \r[21] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 { \r[22] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 | \r[23] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 } \r[24] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 ~ \r[25] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 !" \r[26] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 "" \r[27] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 #" \r[28] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 $" \r[29] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 %" \r[30] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module arith_machine_test $end
$scope module am $end
$scope module rf $end
$var reg 32 &" \r[31] [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b0 v
b0 u
b0 t
b0 s
b0 r
b0 q
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b100000 d
b110 c
b0 b
b0 a
b0 `
b110 _
b1100100 ^
0]
0\
b100 [
0Z
b100 Y
b0 X
b10 W
b0 V
0U
0T
b1100100 S
0R
b1100100 Q
b10 P
b0 O
b1100100 N
b0 M
b1100100 L
b1100100 K
b110 J
b0 I
b110 H
b110 G
b0 F
b100000000 E
b100000000001100000000001100100 D
b0 C
b10 B
1A
0@
0?
0>
b1000 =
0<
0;
0:
09
08
07
b100100 6
b0 5
b100 4
13
b1100100 2
b0 1
b10 0
1/
b100000000001100000000001100100 .
b100 -
b1100100 ,
b1100100 +
b110 *
1)
1(
b0 '
b0 &
b100000 %
1$
0#
0"
0!
$end
#3
0$
#5
b11111111 +
b11111111 S
b11111111 ^
b10011011 2
b10011011 L
b10011011 Q
b111 *
b111 H
b111 _
b10011011 N
b111 J
b1000 -
b1000 4
b1000 [
b10011011 ,
b10011011 K
b111 G
b11011 6
b111 c
b1100100 '
b1100100 V
b1100100 `
b110 a
b100000110001110000000010011011 .
b100000110001110000000010011011 D
b1 C
b100 1
b100 5
b100 X
b1100100 k
b0 &
b0 O
b0 b
1"
#10
0"
#15
b11001000 +
b11001000 S
b11001000 ^
0!
1)
b1000 I
b1100100 M
0(
0/
b1100100 2
b1100100 L
b1100100 Q
b1000 *
b1000 H
b1000 _
b0 N
b0 J
17
b1100 -
b1100 4
b1100 [
b100000000100000 ,
b100000000100000 K
b110 G
b1000 F
b100000 6
0A
b0 =
b110 c
b110001100100000000100000 .
b110001100100000000100000 D
b10 C
b11111111 l
b1100100 &
b1100100 O
b1100100 b
b1000 1
b1000 5
b1000 X
1"
#20
0"
#25
b110111 +
b110111 S
b110111 ^
b1001 *
b1001 H
b1001 _
b11 0
b11 B
b11 P
b11001000 2
b11001000 L
b11001000 Q
b1001 I
07
1;
b11001000 M
b10000 -
b10000 4
b10000 [
b100100000100010 ,
b100100000100010 K
b1000 G
b1001 F
b100010 6
b11001000 &
b11001000 O
b11001000 b
b1000 c
b11111111 '
b11111111 V
b11111111 `
b111 a
b111010000100100000100010 .
b111010000100100000100010 D
b11 C
b1100 1
b1100 5
b1100 X
b11001000 m
1"
#30
0"
#35
1R
0U
b1010 *
b1010 H
b1010 _
b11111111 2
b11111111 L
b11111111 Q
b11111111111111111111111111001001 +
b11111111111111111111111111001001 S
b11111111111111111111111111001001 ^
b1010 I
b11111111 M
b10100 -
b10100 4
b10100 [
b101000000100010 ,
b101000000100010 K
b111 G
b1010 F
b11111111 &
b11111111 O
b11111111 b
b111 c
b11001000 '
b11001000 V
b11001000 `
b1000 a
b1000001110101000000100010 .
b1000001110101000000100010 D
b100 C
b110111 n
b10000 1
b10000 5
b10000 X
1"
#40
0"
#45
0U
0R
b100101100 +
b100101100 S
b100101100 ^
b1011 *
b1011 H
b1011 _
b10 0
b10 B
b10 P
b1100100 2
b1100100 L
b1100100 Q
b1011 I
17
0;
b1100100 M
b11000 -
b11000 4
b11000 [
b101100000100000 ,
b101100000100000 K
b110 G
b1011 F
b100000 6
b1100100 &
b1100100 O
b1100100 b
b110 c
b1000001100101100000100000 .
b1000001100101100000100000 D
b101 C
b10100 1
b10100 5
b10100 X
b11111111111111111111111111001001 o
1"
#50
0"
#55
0U
b101100 +
b101100 S
b101100 ^
b1100 *
b1100 H
b1100 _
b100 0
b100 B
b100 P
b11111111 2
b11111111 L
b11111111 Q
b1100 I
07
18
b11111111 M
b11100 -
b11100 4
b11100 [
b110000000100100 ,
b110000000100100 K
b111 G
b1100 F
b100100 6
b11111111 &
b11111111 O
b11111111 b
b111 c
b100101100 '
b100101100 V
b100101100 `
b1011 a
b1011001110110000000100100 .
b1011001110110000000100100 D
b110 C
b100101100 p
b11000 1
b11000 5
b11000 X
1"
#60
0"
#65
1R
b11111111111111111111111111111111 +
b11111111111111111111111111111111 S
b11111111111111111111111111111111 ^
b101 0
b101 B
b101 P
b1101 *
b1101 H
b1101 _
b1101 I
08
1:
b100000 -
b100000 4
b100000 [
b110100000100101 ,
b110100000100101 K
b1101 F
b100101 6
b11111111111111111111111111001001 '
b11111111111111111111111111001001 V
b11111111111111111111111111001001 `
b1010 a
b1010001110110100000100101 .
b1010001110110100000100101 D
b111 C
b11100 1
b11100 5
b11100 X
b101100 q
1"
#70
0"
#75
0U
b1110 J
b101010101010101 N
1(
1/
0R
b101010110101010 +
b101010110101010 S
b101010110101010 ^
b111 0
b111 B
b111 P
b1110 *
b1110 H
b1110 _
b101010101010101 2
b101010101010101 L
b101010101010101 Q
b0 I
0:
b0 M
b100100 -
b100100 4
b100100 [
b101010101010101 ,
b101010101010101 K
b1110 G
b1010 F
b10101 6
1>
b1110 =
b0 &
b0 O
b0 b
b1110 c
b11111111 '
b11111111 V
b11111111 `
b111 a
b111000111011100101010101010101 .
b111000111011100101010101010101 D
b1000 C
b11111111111111111111111111111111 r
b100000 1
b100000 5
b100000 X
1"
#80
0"
#85
0R
b1111 I
b11111111111111111111111111111111 M
b100000000 +
b100000000 S
b100000000 ^
0(
0/
b11 0
b11 B
b11 P
b11111111111111111111111111111111 2
b11111111111111111111111111111111 L
b11111111111111111111111111111111 Q
b1111 *
b1111 H
b1111 _
0!
b0 N
b0 J
1)
1;
b101000 -
b101000 4
b101000 [
b111100000100010 ,
b111100000100010 K
b1101 G
b1111 F
b100010 6
0>
b0 =
b1101 c
b111011010111100000100010 .
b111011010111100000100010 D
b1001 C
b100100 1
b100100 5
b100100 X
b101010110101010 s
b11111111111111111111111111111111 &
b11111111111111111111111111111111 O
b11111111111111111111111111111111 b
1"
#90
0"
#95
0U
b10000 *
b10000 H
b10000 _
b10 0
b10 B
b10 P
b1100011 +
b1100011 S
b1100011 ^
b10000 I
17
0;
b101100 -
b101100 4
b101100 [
b11111111111111111000000000100000 ,
b11111111111111111000000000100000 K
b10000 F
b100000 6
b1100100 '
b1100100 V
b1100100 `
b110 a
b110011011000000000100000 .
b110011011000000000100000 D
b1010 C
b100000000 t
b101000 1
b101000 5
b101000 X
1"
#100
0"
#105
1R
0U
b11111111111111111111111000000000 +
b11111111111111111111111000000000 S
b11111111111111111111111000000000 ^
b10001 *
b10001 H
b10001 _
b110 0
b110 B
b110 P
b11111111 2
b11111111 L
b11111111 Q
b10001 I
07
19
b11111111 M
b110000 -
b110000 4
b110000 [
b11111111111111111000100000100111 ,
b11111111111111111000100000100111 K
b111 G
b10001 F
b100111 6
b11111111 &
b11111111 O
b11111111 b
b111 c
b100000000 '
b100000000 V
b100000000 `
b1111 a
b1111001111000100000100111 .
b1111001111000100000100111 D
b1011 C
b101100 1
b101100 5
b101100 X
b1100011 u
1"
#110
0"
#115
0!
1)
b11111111111111111111111100000000 +
b11111111111111111111111100000000 S
b11111111111111111111111100000000 ^
b10010 *
b10010 H
b10010 _
b10 0
b10 B
b10 P
b100000000 2
b100000000 L
b100000000 Q
b10010 I
17
09
b100000000 M
b110100 -
b110100 4
b110100 [
b11111111111111111001000000100000 ,
b11111111111111111001000000100000 K
b1111 G
b10010 F
b100000 6
b100000000 &
b100000000 O
b100000000 b
b1111 c
b11111111111111111111111000000000 '
b11111111111111111111111000000000 V
b11111111111111111111111000000000 `
b10001 a
b10001011111001000000100000 .
b10001011111001000000100000 D
b1100 C
b11111111111111111111111000000000 v
b110000 1
b110000 5
b110000 X
1"
#120
0"
#125
0U
1R
b11111111111111111111111011111111 +
b11111111111111111111111011111111 S
b11111111111111111111111011111111 ^
b11111 *
b11111 H
b11111 _
b11111111111111111111111111111111 2
b11111111111111111111111111111111 L
b11111111111111111111111111111111 Q
b11111 I
b11111111111111111111111111111111 M
b111000 -
b111000 4
b111000 [
b11111111111111111111100000100000 ,
b11111111111111111111100000100000 K
b1101 G
b11111 F
b11111111111111111111111111111111 &
b11111111111111111111111111111111 O
b11111111111111111111111111111111 b
b1101 c
b11111111111111111111111100000000 '
b11111111111111111111111100000000 V
b11111111111111111111111100000000 `
b10010 a
b10010011011111100000100000 .
b10010011011111100000100000 D
b1101 C
b110100 1
b110100 5
b110100 X
b11111111111111111111111100000000 w
1"
#130
0"
#135
b11110 *
b11110 H
b11110 _
b0 I
b11110 J
b11111111111111111111111111111111 N
1(
1/
0U
0R
b1100010 +
b1100010 S
b1100010 ^
b10 0
b10 B
b10 P
b11111111111111111111111111111111 2
b11111111111111111111111111111111 L
b11111111111111111111111111111111 Q
07
b0 M
b111100 -
b111100 4
b111100 [
b11111111111111111111111111111111 ,
b11111111111111111111111111111111 K
b11110 G
b111111 6
1A
b1000 =
b0 &
b0 O
b0 b
b11110 c
b1100011 '
b1100011 V
b1100011 `
b10000 a
b100010000111101111111111111111 .
b100010000111101111111111111111 D
b1110 C
b11111111111111111111111011111111 &"
b111000 1
b111000 5
b111000 X
1"
#140
0"
#145
1U
0(
0/
b0 0
b0 B
b0 P
1!
0R
0)
b0 +
b0 S
b0 ^
b0 2
b0 L
b0 Q
b0 *
b0 H
b0 _
b0 N
b0 J
b1000000 -
b1000000 4
b1000000 [
b0 ,
b0 K
b0 G
b0 F
b0 6
0A
b0 =
b0 c
b0 '
b0 V
b0 `
b0 a
b0 .
b0 D
b1111 C
b111100 1
b111100 5
b111100 X
b1100010 %"
b0 &
b0 O
b0 b
1"
#150
b100000 %
0"
